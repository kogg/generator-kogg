{
  "name": "<%= name %>",
<%_ if (description) { _%>
  "description": "<%= description %>",
<%_ } _%>
<%_ if (homepage) { _%>
  "homepage": "<%= homepage %>",
<%_ } else if(org) { _%>
  "homepage": "https://github.com/<%= org %>/<%= name %>",
<%_ } _%>
<%_ if (org) { _%>
  "bugs": {
    "url": "https://github.com/<%= org %>/<%= name %>/issues"
  },
<%_ } _%>
<%_ if (license) { _%>
  "license": "<%= license %>",
<%_ } _%>
<%_ if (org) { _%>
  "repository": {
    "type": "git",
    "url": "git+https://github.com/<%= org %>/<%= name %>.git"
  },
<%_ } _%>
  "scripts": {
    "prebuild": "npm run clean",
    "build": "run-s build:*",
<%_ if (platforms.includes('web')) { _%>
    "build:web": "NODE_ENV=production webpack -p",
<%_ } _%>
    "clean": "rm -rf dist && npm cache clean",
    "coverage:check": "istanbul check-coverage --statements 75 --branches 75 --functions 75 --lines 75",
    "coverage:report": "cat ./coverage/lcov.info | codecov",
    "format": "run-s format:*",
    "postformat": "git diff --staged --name-only --diff-filter=ACMRTUXB | xargs -n 1 git add",
<%_ if (platforms.includes('web')) { _%>
    "format:css": "git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.css$\" | xargs -n 1 stylefmt --config .stylelintrc",
<%_ } _%>
    "format:js": "git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.js$\" | xargs -n 1 eslint --fix --color",
    "format:json": "git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.json$\" | xargs -n 1 jsonlint --in-place",
    "format:package_json": "sort-package-json && git add package.json",
    "formatall": "run-s formatall:*",
<%_ if (platforms.includes('web')) { _%>
    "formatall:css": "( find . -name \\*.css | grep -v node_modules | xargs -n 1 stylefmt --config .stylelintrc )",
<%_ } _%>
    "formatall:js": "( find . -name \\*.js | grep -v node_modules | xargs -n 1 eslint --fix --color )",
    "formatall:json": "( find . -name \\*.json | grep -v node_modules | xargs -n 1 jsonlint --in-place )",
    "formatall:package_json": "sort-package-json",
    "lint": "run-s lint:*",
<%_ if (platforms.includes('web')) { _%>
    "lint:css": "stylelint \"**/*.css\" --color --ignore-path .gitignore",
<%_ } _%>
    "lint:js": "eslint . --color --ignore-path .gitignore",
    "lint:json": "find . -name \\*.json | grep -v node_modules | xargs -n 1 jsonlint --quiet",
    "prerelease": "semantic-release pre && npm run build",
    "release": "run-s release:*",
    "postrelease": "semantic-release post",
    "start": "if [ \"$NODE_ENV\" = 'production' ]; then foreman start; else foreman start -f Procfile.dev; fi",
    "test": "run-s test:*",
    "test:unit": "istanbul cover -x *.test.js _mocha -- -R spec \"./{,!(node_modules)/**/}*.test.js\""
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "pre-commit": "npm run format && npm run lint",
      "commit-msg": "validate-commit-msg"
    },
    "validate-commit-msg": {
      "helpMessage": "Install commitizen and use `git cz` instead of `git commit` https://github.com/commitizen/cz-cli#installing-the-command-line-tool"
    }
  },
  "engines": {
    "node": "^6.1.0",
    "npm": "^3.9.0"
  },
  "release": {
    "getLastRelease": "last-release-github"
  }
}
